{{- if and .Values.openldap.enabled .Values.openldap.admin.createSecret -}}
{{- $openldap := .Values.openldap -}}
{{- $admin := $openldap.admin -}}
{{- $secretName := (include "keycloak-stack.openldapAdminSecretName" .) | trim -}}
{{- if not $secretName -}}
  {{- fail "Set openldap.admin.secretName or enable openldap.admin.createSecret to allow default naming" -}}
{{- end -}}
{{- $existing := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- $passwordKey := default "password" $admin.passwordKey -}}
{{- $configPasswordKey := default "configPassword" $admin.configPasswordKey -}}
{{- $password := "" -}}
{{- $configPassword := "" -}}
{{- if $admin.password }}
  {{- $password = $admin.password -}}
{{- else if and $existing (index $existing.data $passwordKey) }}
  {{- $password = (index $existing.data $passwordKey | b64dec) -}}
{{- else -}}
  {{- $password = randAlphaNum 24 -}}
{{- end -}}
{{- if $admin.configPassword }}
  {{- $configPassword = $admin.configPassword -}}
{{- else if and $existing (index $existing.data $configPasswordKey) }}
  {{- $configPassword = (index $existing.data $configPasswordKey | b64dec) -}}
{{- else if $openldap.config.enableConfigAdmin }}
  {{- $configPassword = randAlphaNum 24 -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "keycloak-stack.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ $passwordKey }}: {{ $password | quote }}
  {{- if $configPassword }}
  {{ $configPasswordKey }}: {{ $configPassword | quote }}
  {{- end }}
{{- end }}
