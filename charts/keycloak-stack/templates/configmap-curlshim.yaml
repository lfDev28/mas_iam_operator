apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "keycloak-stack.fullname" . }}-curl-shim
  labels:
    {{- include "keycloak-stack.labels" . | nindent 4 }}
data:
  curl: |
    #!/bin/sh
    set -e

    usage() {
      echo "unsupported curl invocation" >&2
      exit 2
    }

    writeout=""
    out="/dev/stdout"
    url=""
    while [ "$#" -gt 0 ]; do
      case "$1" in
        -s|-S|-sS) shift ;;
        -o)
          shift
          [ -n "$1" ] || usage
          out="$1"
          shift
          ;;
        -w)
          shift
          [ -n "$1" ] || usage
          writeout="$1"
          shift
          ;;
        --)
          shift
          break
          ;;
        http://*|https://*)
          [ -z "$url" ] || usage
          url="$1"
          shift
          ;;
        *)
          usage
          ;;
      esac
    done

    [ $# -eq 0 ] || usage
    [ -n "$url" ] || usage

    proto="${url%%://*}"
    [ "$proto" = "http" ] || usage
    rest="${url#*://}"
    host="${rest%%/*}"
    path="/${rest#*/}"
    [ "$rest" = "$host" ] && path="/"
    port="80"
    case "$host" in
      *:*)
        port="${host##*:}"
        host="${host%%:*}"
        ;;
    esac

    if { [ "$host" = "127.0.0.1" ] || [ "$host" = "localhost" ]; } && [ "$port" = "8080" ]; then
      case "$path" in
        /health/ready|/health/live)
          port="9000"
          ;;
      esac
    fi

    exec 3<>"/dev/tcp/$host/$port" || exit 7
    printf 'GET %s HTTP/1.1\r\nHost: %s\r\nConnection: close\r\n\r\n' "$path" "$host" >&3

    status_line=""
    while IFS= read -r line; do
      [ -z "$status_line" ] && status_line="$line"
      [ -z "$line" ] && break
    done <&3

    body="$(cat <&3)"
    exec 3<&-

    status_line="$(printf '%s' "$status_line" | tr -d '\r')"
    set -- $status_line
    status="$2"
    [ -n "$status" ] || status="000"

    printf '%s' "$body" >"$out"
    if [ -n "$writeout" ]; then
      formatted="$(printf '%s\n' "$writeout" | sed "s/%{http_code}/$status/g")"
      printf '%b' "$formatted"
    else
      printf '%s' "$body"
    fi
