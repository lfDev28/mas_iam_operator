{{- if and .Values.openldap.enabled .Values.openldap.tls.enabled (or .Values.openldap.tls.createSecret .Values.openldap.tls.secretName) -}}
{{- $tls := .Values.openldap.tls -}}
{{- $secretName := $tls.secretName | default (printf "%s-openldap-tls" (include "keycloak-stack.fullname" .)) -}}
{{- if and $tls.createSecret (not (hasKey $tls "secret")) -}}
  {{- fail "openldap.tls.secret must be provided when openldap.tls.createSecret=true" -}}
{{- end -}}
{{- if $tls.createSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "keycloak-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: openldap
type: Opaque
data:
  {{ default "ca.crt" $tls.caKey }}: {{ if $tls.secret.caCrt }}{{ $tls.secret.caCrt | b64enc | trim }}{{ else }}{{ "" | quote }}{{ end }}
  {{ default "tls.crt" $tls.certKey }}: {{ if $tls.secret.tlsCrt }}{{ $tls.secret.tlsCrt | b64enc | trim }}{{ else }}{{ "" | quote }}{{ end }}
  {{ default "tls.key" $tls.privateKeyKey }}: {{ if $tls.secret.tlsKey }}{{ $tls.secret.tlsKey | b64enc | trim }}{{ else }}{{ "" | quote }}{{ end }}
  {{ default "ldap-truststore.p12" $tls.truststoreKey }}: {{ if $tls.secret.truststore }}{{ $tls.secret.truststore | trim | quote }}{{ else }}{{ "" | quote }}{{ end }}
stringData:
  {{ default "truststorePassword" $tls.truststorePasswordKey }}: {{ default "changeit" $tls.secret.truststorePassword }}
---
{{- end }}
{{- end }}
