apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "iam.iam.mas.ibm.com/v1alpha1",
          "kind": "KeycloakStack",
          "metadata": {
            "name": "keycloakstack-sample"
          },
          "spec": {
            "keycloak": {
              "args": [
                "start"
              ],
              "bootstrapAdmin": {
                "createSecret": true,
                "password": "",
                "passwordKey": "password",
                "secretName": "",
                "username": "admin",
                "usernameKey": "username"
              },
              "devMode": {
                "enabled": false
              },
              "env": [
                {
                  "name": "KC_HEALTH_ENABLED",
                  "value": "true"
                },
                {
                  "name": "KC_HTTP_ENABLED",
                  "value": "true"
                },
                {
                  "name": "KC_HOSTNAME_STRICT",
                  "value": "false"
                },
                {
                  "name": "KC_PROXY_HEADERS",
                  "value": "xforwarded"
                }
              ],
              "image": {
                "pullPolicy": "IfNotPresent",
                "registry": "quay.io",
                "repository": "keycloak/keycloak",
                "tag": "26.0.5"
              },
              "ldap": {
                "autoConfigure": true,
                "baseDn": "dc=demo,dc=local",
                "bindCredentialKey": "password",
                "bindCredentialSecret": "",
                "bindDn": "cn=admin,dc=demo,dc=local",
                "cachePolicy": "DEFAULT",
                "changedSyncPeriod": 600,
                "connectionUrl": "",
                "editMode": "READ_ONLY",
                "fullSyncPeriod": 86400,
                "groupsDn": "ou=groups,dc=demo,dc=local",
                "importUsers": true,
                "providerName": "openldap",
                "rdnLDAPAttribute": "uid",
                "realm": "maximo",
                "searchScope": "SUBTREE",
                "syncPeriod": 3600,
                "tls": {
                  "caBundleKey": "ca.crt",
                  "caSecret": "keycloakstack-sample-keycloak-openldap-tls",
                  "enabled": true,
                  "hostnameVerificationPolicy": "ANY",
                  "truststoreFile": "ldap-truststore.p12",
                  "truststorePassword": "changeit"
                },
                "truststoreKey": "truststore.jks",
                "truststorePasswordKey": "password",
                "truststorePasswordSecret": "",
                "truststoreSecret": "",
                "useTruststoreSpi": "Always",
                "usernameLDAPAttribute": "uid",
                "usersDn": "ou=users,dc=demo,dc=local",
                "uuidLDAPAttribute": "entryUUID"
              },
              "realmImport": {
                "enabled": true,
                "files": [
                  {
                    "file": "realm-config/maximo-realm.json",
                    "target": "maximo-realm.json"
                  }
                ],
                "overrideExisting": false
              },
              "replicaCount": 1,
              "route": {
                "autoHost": {
                  "appsDomain": "",
                  "enabled": false
                },
                "enabled": true,
                "host": "",
                "tls": {
                  "insecurePolicy": "Redirect",
                  "termination": "edge"
                }
              },
              "service": {
                "port": 8080
              }
            },
            "openldap": {
              "admin": {
                "configPassword": "",
                "configPasswordKey": "configPassword",
                "createSecret": true,
                "password": "",
                "passwordKey": "password",
                "secretName": ""
              },
              "affinity": {},
              "config": {
                "baseDN": "dc=demo,dc=local",
                "domain": "demo.local",
                "enableConfigAdmin": false,
                "organisation": "Demo Org"
              },
              "containerSecurityContext": {
                "enabled": false,
                "runAsNonRoot": false,
                "runAsUser": 0
              },
              "enabled": true,
              "extraEnv": [
                {
                  "name": "CONTAINER_LOG_LEVEL",
                  "value": "4"
                },
                {
                  "name": "LDAP_LOGLEVEL",
                  "value": "256"
                },
                {
                  "name": "LDAP_TLS_VERIFY_CLIENT",
                  "value": "never"
                }
              ],
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "osixia/openldap",
                "tag": "1.5.0"
              },
              "nodeSelector": {},
              "persistence": {
                "enabled": false,
                "size": "2Gi",
                "storageClass": ""
              },
              "podAnnotations": {},
              "podLabels": {},
              "podSecurityContext": {
                "enabled": false,
                "fsGroup": 0
              },
              "replicaCount": 1,
              "resources": {},
              "seedLDIFs": [
                {
                  "file": "ldap-seed/dev-base.ldif"
                }
              ],
              "service": {
                "port": 389,
                "tlsPort": 636,
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "create": true,
                "name": ""
              },
              "tls": {
                "caKey": "ca.crt",
                "certKey": "tls.crt",
                "createSecret": false,
                "enabled": true,
                "enforce": false,
                "privateKeyKey": "tls.key",
                "secretName": "keycloakstack-sample-keycloak-openldap-tls",
                "truststoreKey": "ldap-truststore.p12",
                "truststorePasswordKey": "truststorePassword"
              },
              "tolerations": []
            },
            "postgresql": {
              "architecture": "standalone",
              "audit": {
                "clientMinMessages": "error",
                "logConnections": false,
                "logDisconnections": false,
                "logHostname": false,
                "logLinePrefix": "",
                "logTimezone": "",
                "pgAuditLog": "",
                "pgAuditLogCatalog": "off"
              },
              "auth": {
                "database": "keycloak",
                "enablePostgresUser": true,
                "existingSecret": "",
                "password": "",
                "postgresPassword": "",
                "replicationPassword": "",
                "replicationUsername": "",
                "secretKeys": {
                  "adminPasswordKey": "postgres-password",
                  "replicationPasswordKey": "replication-password",
                  "userPasswordKey": "password"
                },
                "usePasswordFiles": false,
                "username": "keycloak"
              },
              "backup": {
                "cronjob": {
                  "annotations": {},
                  "command": [
                    "/bin/sh",
                    "-c",
                    "pg_dumpall --clean --if-exists --load-via-partition-root --quote-all-identifiers --no-password --file=${PGDUMP_DIR}/pg_dumpall-$(date '+%Y-%m-%d-%H-%M').pgdump"
                  ],
                  "concurrencyPolicy": "Allow",
                  "containerSecurityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "enabled": true,
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "extraVolumeMounts": [],
                  "extraVolumes": [],
                  "failedJobsHistoryLimit": 1,
                  "labels": {},
                  "networkPolicy": {
                    "enabled": true
                  },
                  "nodeSelector": {},
                  "podSecurityContext": {
                    "enabled": true,
                    "fsGroup": 1001,
                    "fsGroupChangePolicy": "Always",
                    "supplementalGroups": [],
                    "sysctls": []
                  },
                  "resources": {},
                  "resourcesPreset": "nano",
                  "restartPolicy": "OnFailure",
                  "schedule": "@daily",
                  "startingDeadlineSeconds": "",
                  "storage": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "annotations": {},
                    "enabled": true,
                    "existingClaim": "",
                    "mountPath": "/backup/pgdump",
                    "resourcePolicy": "",
                    "size": "8Gi",
                    "storageClass": "",
                    "subPath": "",
                    "volumeClaimTemplates": {
                      "selector": {}
                    }
                  },
                  "successfulJobsHistoryLimit": 3,
                  "timeZone": "",
                  "tolerations": [],
                  "ttlSecondsAfterFinished": ""
                },
                "enabled": false
              },
              "clusterDomain": "cluster.local",
              "common": {
                "exampleValue": "common-chart",
                "global": {
                  "compatibility": {
                    "openshift": {
                      "adaptSecurityContext": "auto"
                    }
                  },
                  "defaultStorageClass": "",
                  "imagePullSecrets": [],
                  "imageRegistry": "",
                  "postgresql": {
                    "auth": {
                      "database": "",
                      "existingSecret": "",
                      "password": "",
                      "postgresPassword": "",
                      "secretKeys": {
                        "adminPasswordKey": "",
                        "replicationPasswordKey": "",
                        "userPasswordKey": ""
                      },
                      "username": ""
                    },
                    "service": {
                      "ports": {
                        "postgresql": ""
                      }
                    }
                  },
                  "storageClass": ""
                }
              },
              "commonAnnotations": {},
              "commonLabels": {},
              "containerPorts": {
                "postgresql": 5432
              },
              "diagnosticMode": {
                "args": [
                  "infinity"
                ],
                "command": [
                  "sleep"
                ],
                "enabled": false
              },
              "enabled": true,
              "extraDeploy": [],
              "fullnameOverride": "",
              "global": {
                "compatibility": {
                  "openshift": {
                    "adaptSecurityContext": "auto"
                  }
                },
                "defaultStorageClass": "",
                "imagePullSecrets": [],
                "imageRegistry": "",
                "postgresql": {
                  "auth": {
                    "database": "",
                    "existingSecret": "",
                    "password": "",
                    "postgresPassword": "",
                    "secretKeys": {
                      "adminPasswordKey": "",
                      "replicationPasswordKey": "",
                      "userPasswordKey": ""
                    },
                    "username": ""
                  },
                  "service": {
                    "ports": {
                      "postgresql": ""
                    }
                  }
                },
                "storageClass": ""
              },
              "image": {
                "debug": false,
                "digest": "",
                "pullPolicy": "IfNotPresent",
                "pullSecrets": [],
                "registry": "docker.io",
                "repository": "bitnamilegacy/postgresql",
                "tag": "17.6.0-debian-12-r4"
              },
              "kubeVersion": "",
              "ldap": {
                "basedn": "",
                "binddn": "",
                "bindpw": "",
                "enabled": false,
                "port": "",
                "prefix": "",
                "scheme": "",
                "searchAttribute": "",
                "searchFilter": "",
                "server": "",
                "suffix": "",
                "tls": {
                  "enabled": false
                },
                "uri": ""
              },
              "metrics": {
                "collectors": {},
                "containerPorts": {
                  "metrics": 9187
                },
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "enabled": true,
                  "privileged": false,
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 1001,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seLinuxOptions": {},
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "customLivenessProbe": {},
                "customMetrics": {},
                "customReadinessProbe": {},
                "customStartupProbe": {},
                "enabled": false,
                "extraEnvVars": [],
                "image": {
                  "digest": "",
                  "pullPolicy": "IfNotPresent",
                  "pullSecrets": [],
                  "registry": "docker.io",
                  "repository": "bitnami/postgres-exporter",
                  "tag": "0.15.0-debian-12-r43"
                },
                "livenessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "prometheusRule": {
                  "enabled": false,
                  "labels": {},
                  "namespace": "",
                  "rules": []
                },
                "readinessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {},
                "resourcesPreset": "nano",
                "service": {
                  "annotations": {
                    "prometheus.io/port": "{{ .Values.metrics.service.ports.metrics }}",
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "",
                  "ports": {
                    "metrics": 9187
                  },
                  "sessionAffinity": "None"
                },
                "serviceMonitor": {
                  "enabled": false,
                  "honorLabels": false,
                  "interval": "",
                  "jobLabel": "",
                  "labels": {},
                  "metricRelabelings": [],
                  "namespace": "",
                  "relabelings": [],
                  "scrapeTimeout": "",
                  "selector": {}
                },
                "startupProbe": {
                  "enabled": false,
                  "failureThreshold": 15,
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                }
              },
              "nameOverride": "",
              "postgresqlDataDir": "/bitnami/postgresql/data",
              "postgresqlSharedPreloadLibraries": "pgaudit",
              "primary": {
                "affinity": {},
                "annotations": {},
                "args": [],
                "automountServiceAccountToken": false,
                "command": [],
                "configuration": "",
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "enabled": true,
                  "privileged": false,
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 1001,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seLinuxOptions": {},
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "customLivenessProbe": {},
                "customReadinessProbe": {},
                "customStartupProbe": {},
                "existingConfigmap": "",
                "existingExtendedConfigmap": "",
                "extendedConfiguration": "",
                "extraEnvVars": [],
                "extraEnvVarsCM": "",
                "extraEnvVarsSecret": "",
                "extraPodSpec": {},
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "hostAliases": [],
                "hostIPC": false,
                "hostNetwork": false,
                "initContainers": [],
                "initdb": {
                  "args": "",
                  "password": "",
                  "postgresqlWalDir": "",
                  "scripts": {},
                  "scriptsConfigMap": "",
                  "scriptsSecret": "",
                  "user": ""
                },
                "labels": {},
                "lifecycleHooks": {},
                "livenessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "primary",
                "networkPolicy": {
                  "allowExternal": true,
                  "allowExternalEgress": true,
                  "enabled": true,
                  "extraEgress": [],
                  "extraIngress": [],
                  "ingressNSMatchLabels": {},
                  "ingressNSPodMatchLabels": {}
                },
                "nodeAffinityPreset": {
                  "key": "",
                  "type": "",
                  "values": []
                },
                "nodeSelector": {},
                "pdb": {
                  "create": true,
                  "maxUnavailable": "",
                  "minAvailable": ""
                },
                "persistence": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "dataSource": {},
                  "enabled": true,
                  "existingClaim": "",
                  "labels": {},
                  "mountPath": "/bitnami/postgresql",
                  "selector": {},
                  "size": "8Gi",
                  "storageClass": "rook-ceph-block",
                  "subPath": "",
                  "volumeName": "data"
                },
                "persistentVolumeClaimRetentionPolicy": {
                  "enabled": false,
                  "whenDeleted": "Retain",
                  "whenScaled": "Retain"
                },
                "pgHbaConfiguration": "",
                "podAffinityPreset": "",
                "podAnnotations": {},
                "podAntiAffinityPreset": "soft",
                "podLabels": {},
                "podSecurityContext": {
                  "enabled": true,
                  "fsGroup": 1001,
                  "fsGroupChangePolicy": "Always",
                  "supplementalGroups": [],
                  "sysctls": []
                },
                "preInitDb": {
                  "scripts": {},
                  "scriptsConfigMap": "",
                  "scriptsSecret": ""
                },
                "priorityClassName": "",
                "readinessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {},
                "resourcesPreset": "nano",
                "schedulerName": "",
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalTrafficPolicy": "Cluster",
                  "extraPorts": [],
                  "headless": {
                    "annotations": {}
                  },
                  "loadBalancerClass": "",
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "nodePorts": {
                    "postgresql": ""
                  },
                  "ports": {
                    "postgresql": 5432
                  },
                  "sessionAffinity": "None",
                  "sessionAffinityConfig": {},
                  "type": "ClusterIP"
                },
                "sidecars": [],
                "standby": {
                  "enabled": false,
                  "primaryHost": "",
                  "primaryPort": ""
                },
                "startupProbe": {
                  "enabled": false,
                  "failureThreshold": 15,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationGracePeriodSeconds": "",
                "tolerations": [],
                "topologySpreadConstraints": [],
                "updateStrategy": {
                  "rollingUpdate": {},
                  "type": "RollingUpdate"
                },
                "volumePermissions": {
                  "enabled": true
                }
              },
              "psp": {
                "create": false
              },
              "rbac": {
                "create": false,
                "rules": []
              },
              "readReplicas": {
                "affinity": {},
                "annotations": {},
                "args": [],
                "automountServiceAccountToken": false,
                "command": [],
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "enabled": true,
                  "privileged": false,
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 1001,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seLinuxOptions": {},
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "customLivenessProbe": {},
                "customReadinessProbe": {},
                "customStartupProbe": {},
                "extendedConfiguration": "",
                "extraEnvVars": [],
                "extraEnvVarsCM": "",
                "extraEnvVarsSecret": "",
                "extraPodSpec": {},
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "hostAliases": [],
                "hostIPC": false,
                "hostNetwork": false,
                "initContainers": [],
                "labels": {},
                "lifecycleHooks": {},
                "livenessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "read",
                "networkPolicy": {
                  "allowExternal": true,
                  "allowExternalEgress": true,
                  "enabled": true,
                  "extraEgress": [],
                  "extraIngress": [],
                  "ingressNSMatchLabels": {},
                  "ingressNSPodMatchLabels": {}
                },
                "nodeAffinityPreset": {
                  "key": "",
                  "type": "",
                  "values": []
                },
                "nodeSelector": {},
                "pdb": {
                  "create": true,
                  "maxUnavailable": "",
                  "minAvailable": ""
                },
                "persistence": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "dataSource": {},
                  "enabled": true,
                  "existingClaim": "",
                  "labels": {},
                  "mountPath": "/bitnami/postgresql",
                  "selector": {},
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "persistentVolumeClaimRetentionPolicy": {
                  "enabled": false,
                  "whenDeleted": "Retain",
                  "whenScaled": "Retain"
                },
                "podAffinityPreset": "",
                "podAnnotations": {},
                "podAntiAffinityPreset": "soft",
                "podLabels": {},
                "podSecurityContext": {
                  "enabled": true,
                  "fsGroup": 1001,
                  "fsGroupChangePolicy": "Always",
                  "supplementalGroups": [],
                  "sysctls": []
                },
                "priorityClassName": "",
                "readinessProbe": {
                  "enabled": true,
                  "failureThreshold": 6,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "replicaCount": 1,
                "resources": {},
                "resourcesPreset": "nano",
                "schedulerName": "",
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalTrafficPolicy": "Cluster",
                  "extraPorts": [],
                  "headless": {
                    "annotations": {}
                  },
                  "loadBalancerClass": "",
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "nodePorts": {
                    "postgresql": ""
                  },
                  "ports": {
                    "postgresql": 5432
                  },
                  "sessionAffinity": "None",
                  "sessionAffinityConfig": {},
                  "type": "ClusterIP"
                },
                "sidecars": [],
                "startupProbe": {
                  "enabled": false,
                  "failureThreshold": 15,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationGracePeriodSeconds": "",
                "tolerations": [],
                "topologySpreadConstraints": [],
                "updateStrategy": {
                  "rollingUpdate": {},
                  "type": "RollingUpdate"
                }
              },
              "replication": {
                "applicationName": "my_application",
                "numSynchronousReplicas": 0,
                "synchronousCommit": "off"
              },
              "serviceAccount": {
                "annotations": {},
                "automountServiceAccountToken": false,
                "create": true,
                "name": ""
              },
              "serviceBindings": {
                "enabled": false
              },
              "shmVolume": {
                "enabled": true,
                "sizeLimit": ""
              },
              "tls": {
                "autoGenerated": false,
                "certCAFilename": "",
                "certFilename": "",
                "certKeyFilename": "",
                "certificatesSecret": "",
                "crlFilename": "",
                "enabled": false,
                "preferServerCiphers": true
              },
              "volumePermissions": {
                "containerSecurityContext": {
                  "runAsGroup": 0,
                  "runAsNonRoot": false,
                  "runAsUser": 0,
                  "seLinuxOptions": {},
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "enabled": false,
                "image": {
                  "digest": "",
                  "pullPolicy": "IfNotPresent",
                  "pullSecrets": [],
                  "registry": "docker.io",
                  "repository": "bitnami/os-shell",
                  "tag": "12-debian-12-r30"
                },
                "resources": {},
                "resourcesPreset": "nano"
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2025-10-21T02:26:36Z"
    operators.operatorframework.io/builder: operator-sdk-v1.33.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: keycloak-stack-operator.v0.0.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: KeycloakStack
      name: keycloakstacks.iam.iam.mas.ibm.com
      version: v1alpha1
  description: Keycloak Stack Operator description. TODO.
  displayName: Keycloak Stack Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - iam.iam.mas.ibm.com
          resources:
          - keycloakstacks
          - keycloakstacks/status
          - keycloakstacks/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: keycloak-stack-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: keycloak-stack-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: keycloak-stack-operator
          control-plane: controller-manager
        name: keycloak-stack-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=keycloak-stack-operator
                image: quay.io/lee_forster/mas-iam-operator:0.0.2
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: keycloak-stack-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: keycloak-stack-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - keycloak-stack-operator
  links:
  - name: Keycloak Stack Operator
    url: https://keycloak-stack-operator.domain
  maintainers:
  - email: your@email.com
    name: Maintainer Name
  maturity: alpha
  minKubeVersion: 1.24.0
  provider:
    name: Provider Name
    url: https://your.domain
  version: 0.0.2
