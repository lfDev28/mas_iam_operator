{{- $bootstrap := .Values.keycloak.bootstrapAdmin -}}
{{- if $bootstrap.createSecret -}}
{{- $secretName := (include "keycloak-stack.bootstrapAdminSecretName" .) | trim -}}
{{- if not $secretName -}}
  {{- fail "Set keycloak.bootstrapAdmin.secretName or enable keycloak.bootstrapAdmin.createSecret to allow default naming" -}}
{{- end -}}
{{- $existing := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- $usernameKey := default "username" $bootstrap.usernameKey -}}
{{- $passwordKey := default "password" $bootstrap.passwordKey -}}
{{- $username := "" -}}
{{- $password := "" -}}
{{- if $bootstrap.username }}
  {{- $username = $bootstrap.username -}}
{{- else if and $existing (index $existing.data $usernameKey) }}
  {{- $username = (index $existing.data $usernameKey | b64dec) -}}
{{- else -}}
  {{- $username = "admin" -}}
{{- end -}}
{{- if $bootstrap.password }}
  {{- $password = $bootstrap.password -}}
{{- else if and $existing (index $existing.data $passwordKey) }}
  {{- $password = (index $existing.data $passwordKey | b64dec) -}}
{{- else -}}
  {{- $password = randAlphaNum 24 -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "keycloak-stack.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ $usernameKey }}: {{ $username | quote }}
  {{ $passwordKey }}: {{ $password | quote }}
{{- end }}
